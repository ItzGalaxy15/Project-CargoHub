name: CI-build-&-test

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'

env:
  IMAGE_NAME: CargoHub
  OWNER: "${{ github.repository_owner }}"
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    outputs:
      dotnet-url: ${{ steps.run-dotnet.outputs.dotnet-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Add .NET to PATH
        run: echo "${{ runner.temp }}/dotnet" >> $GITHUB_PATH

      - name: Debug File Structure
        run: ls -R .

      - name: Build .NET project
        run: dotnet build --configuration Release ../Project-CargoHub/CargoHub/CargoHubC#.csproj

      - name: Run .NET Application
        id: run-dotnet
        run: |
          dotnet run --project ../Project-CargoHub/CargoHub/CargoHubC#.csproj &
          echo "Waiting for the .NET app to start..."
          for i in {1..10}; do
            curl -f http://localhost:3000 && break || sleep 5;
          done
          echo "::set-output name=dotnet-url::http://localhost:3000"

  testV1:
    runs-on: ubuntu-latest
    needs: build-and-run
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.9'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httpx pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: integration
        run: |
          cd "Tests/V1/Integration Tests"
          coverage run -m pytest 

      - name: Run Tests with Coverage
        run: |
          cd "Tests/V1/Integration Tests"
          coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
          coverage report --fail-under=90
          pytest --cov=. --cov-report=term-missing -v -s

      - name: coverage report
        uses: actions/upload-artifact@v4
        with:
          path: coverage.xml
        if: ${{ failure() }}

  testV2:
    runs-on: ubuntu-latest
    needs: build-and-run
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.9'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install httpx pytest pytest-cov
          if [ -f requirements.txt]; then pip install -r requirements.txt; fi

      - name: integration
        run: |
          cd "Tests/V2/Integration Tests"
          coverage run -m pytest 

      - name: Run Tests with Coverage
        run: |
          cd "Tests/V2/Integration Tests"
          coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
          coverage report --fail-under=90
          pytest --cov=. --cov-report=term-missing -v -s

      - name: coverage report
        uses: actions/upload-artifact@v4
        with:
          path: coverage.xml
        if: ${{ failure() }}
